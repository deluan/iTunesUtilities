apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'idea'

group = 'com.worldsworstsoftware'
version = '1.1'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'net.vidageek:mirror:1.6.1'

    testCompile 'ch.qos.logback:logback-classic:1.1.2'
    testCompile 'org.codehaus.groovy:groovy:2.3.3'
    testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude module: 'junit-dep'
    }
    testCompile 'junit:junit:4.11'
}

idea {
    project {
        jdkName = '1.7'
    }
    module {
        name = 'iTunesUtilities'
        excludeDirs += [file('gradle'), file('.idea')]
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
        downloadJavadoc = false
        downloadSources = true
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
    }
}

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

publishing {
    publications {
        mavenJava(MavenPublication) {
            if (plugins.hasPlugin('war')) {
                from components.web
            } else {
                from components.java
            }

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }

            pom.withXml {
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'compile'
                }
            }
        }
    }
}


bintray {
    user = bintrayUser
    key = bintrayKey
    publications = ['mavenJava']
    pkg {
        repo = 'maven'
        name = 'itunes-utilities'
        desc = 'A set of classes that help developers build applications around iTunes\' library data'
        licenses = ['Apache-2.0']
        labels = ['iTunes']
        publicDownloadNumbers = true

        websiteUrl = 'https://github.com/deluan/iTunesUtilities'
        vcsUrl = 'https://github.com/deluan/iTunesUtilities.git'
    }
}